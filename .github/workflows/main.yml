name: 'Lint Code'

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

jobs:
  lint_python:
    name: Lint Python Files
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install autopep8
    
    - name: Print working directory
      run: pwd
    
    - name: Run Linter with Auto-fix
      run: |
        find . -name "*.py" -exec autopep8 --in-place --aggressive --aggressive {} +
        echo "Auto-fixed and linted all the Python files successfully"

  lint_js:
    name: Lint JavaScript Files
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    
    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
    
    - name: Install ESLint
      run: npm install eslint --global
    
    - name: Create ESLint Configuration
      run: |
        # Create ESLint configuration file if it doesn't exist
        if [ ! -f .eslintrc.json ]; then
          echo '{
              "env": {
                  "browser": true,
                  "es2021": true,
                  "node": true
              },
              "extends": "eslint:recommended",
              "parserOptions": {
                  "ecmaVersion": 12,
                  "sourceType": "module"
              },
              "rules": {
                  "indent": ["error", 4],
                  "linebreak-style": ["error", "unix"],
                  "quotes": ["error", "double"],
                  "semi": ["error", "always"],
                  "no-unused-vars": ["warn"],
                  "no-console": ["warn"],
                  "eqeqeq": ["error", "always"]
              }
          }' > .eslintrc.json
        fi
    
    - name: Run Linter with Auto-fix
      run: |
        find ./database -name "*.js" -exec eslint --fix {} +
        echo "Auto-fixed and linted all the js files successfully"
